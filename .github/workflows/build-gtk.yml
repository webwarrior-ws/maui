name: Build Controls.Sample.Gtk
on: [push, pull_request]

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-22.04
    env:
      GtkSharpVersion: 3.24.24.117-develop
      GtkSharpManifestVersion: 8.0.200
      DotnetVersion: 8.0.200
    steps:
      - name: Checkout MAUI repo
        uses: actions/checkout@v2
      # We also tested using 6.0.111 for both projects
      # but MAUI failed to build on this version with this error:
      # Could not load file or assembly 'Microsoft.CodeAnalysis, Version=4.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'
      # So instead we use 6.0.400
      - name: Setup .NET SDK ${{ env.DotnetVersion }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ env.DotnetVersion }}
      - name: Add nuget source
        run: dotnet nuget add source --name nuget https://api.nuget.org/v3/index.json
      - name: Install gtk workload
        run: |
            # For some reason automatic workload manifest detection doesn't work (see https://github.com/GtkSharp/GtkSharp/issues/355#issuecomment-1446262239), so download and uzip mainfest file manually
            dotnet nuget add source --name nuget.org "https://api.nuget.org/v3/index.json"
            wget https://www.nuget.org/api/v2/package/gtksharp.net.sdk.gtk.manifest-${{ env.GtkSharpManifestVersion }}/$GtkSharpVersion -O gtksharp.net.sdk.gtk.manifest-${{ env.GtkSharpManifestVersion }}.nupkg            
            DOTNET_DIR=/home/runner/.dotnet
            WORKLOAD_MANIFEST_DIR=$DOTNET_DIR/sdk-manifests/${{ env.DotnetVersion }}/gtksharp.net.sdk.gtk
            mkdir -p $WORKLOAD_MANIFEST_DIR
            unzip -j gtksharp.net.sdk.gtk.manifest-${{ env.GtkSharpManifestVersion }}.nupkg "data/*" -d $WORKLOAD_MANIFEST_DIR/
            rm gtksharp.net.sdk.gtk.manifest-${{ env.GtkSharpManifestVersion }}.nupkg
            chmod 764 $WORKLOAD_MANIFEST_DIR/*

            dotnet workload search
            dotnet workload install gtk --skip-manifest-update
      - name: Build MAUI
        run: |
            sed -i 's/_IncludeAndroid>true/_IncludeAndroid>/g' Directory.Build.Override.props
            dotnet build Microsoft.Maui.BuildTasks.slnf
            dotnet build -c Release Microsoft.Maui.Gtk.slnf
      - name: Pack MAUI
        run: |
            dotnet pack src/BlazorWebView/src/Maui/Microsoft.AspNetCore.Components.WebView.Maui.csproj --no-build --no-restore
            dotnet pack src/Essentials/src/Essentials.csproj --no-build --no-restore
            dotnet pack src/Controls/src/Core/Controls.Core.csproj --no-build --no-restore
            dotnet pack src/Controls/src/Xaml/Controls.Xaml.csproj --no-build --no-restore
            dotnet pack src/Core/src/Core.csproj --no-build --no-restore
            dotnet pack src/Compatibility/Core/src/Compatibility.csproj --no-build --no-restore
            dotnet pack src/Controls/Foldable/src/Controls.Foldable.csproj --no-build --no-restore
      - name: Upload binaries to nuget (if tag or master branch, and nugetKey is present)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NUGET_KEY: ${{ secrets.NUGET_KEY }}
        if: ${{ env.NUGET_KEY != ''  && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
        run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

  dotnet-format:
    needs: build_and_test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Run dotnet format
        run: |
          # remark: doesnt work, alwasy fails:
          # dotnet format whitespace ./src --folder --exclude Templates/src
          git diff --exit-code

